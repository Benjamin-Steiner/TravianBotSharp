name: CI-develop

on:
  push:
    branches: [ develop ]
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semvers.outputs.patch }}
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags
      
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        
      - name: 'Get next version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
  build:
    runs-on: windows-latest
    needs: version
    steps:
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1

      - uses: actions/checkout@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
      
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE
       
      - name: Get cache
        uses: actions/cache@v2
        with:
          path: |
              packages
              TbsCore/obj/project.assets.json
              TbsCore/TbsCore.csproj.nuget.g.targets
              TbsCore/TbsCore.csproj.nuget.g.props.              
          key: ${{ runner.os }}-nuget-${{ hashFiles('TbsCore/packages.lock.json') }}
          restore-keys: |
              ${{ runner.os }}-nuget-
      - name: Restore Packages
        run: |
          nuget restore TbsCore/TbsCore.csproj -PackagesDirectory packages
          nuget restore TravBotSharp/TbsWinForms.csproj -PackagesDirectory packages
        
      - name: Build Bot
        run: |
          msbuild.exe TravBotSharp.sln /t:TbsWinForms /nologo /nr:false /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /m /p:BuildProjectReferences=true /p:BUILD_NUMBER=${{needs.version.outputs.version}}.0

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: TBS-pre
          path: TravBotSharp\bin\Release
          if-no-files-found: error
  Pre-release:
    runs-on: ubuntu-latest
    needs: [build, version]
    steps:    
        
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: TBS-pre
          path: TravBotSharp/bin/Release
      
      - name: Archive pre release
        uses: papeloto/action-zip@v1
        with:
            files: TravBotSharp/bin/Release
            dest: TBS-${{needs.version.outputs.version}}.zip
          
      - name: Create pre release
        uses: ncipollo/release-action@v1
        with:
          name: TBS-${{needs.version.outputs.version}}-pre
          prerelease: true
          tag: ${{needs.version.outputs.version}}
          commit: develop
          body: |
            **Changelog**: 
            ${{ github.event.head_commit.message }}
          artifacts: TBS-${{needs.version.outputs.version}}.zip
          token: ${{ secrets.GITHUB_TOKEN }} 
  Discord:
    runs-on: ubuntu-latest
    needs: [Pre-release, version]
    steps: 
      - name: Send to Discord Server
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{\"content\":\"Changelog is in download link\",\"embeds\":[{\"title\":\"Download TBS-${{needs.version.outputs.version}}\",\"url\":\"https://github.com/Erol444/TravianBotSharp/releases/tag/${{needs.version.outputs.version}}\"}]}' ${{ secrets.DISCORD_PRE_BOT }}
  Clear:
    runs-on: ubuntu-latest
    needs: Pre-release
    steps:
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: TBS-pre
            
      
      
